"""updated product

Revision ID: 00248bed0fb5
Revises: a193e9cfa8c5
Create Date: 2025-04-27 13:26:01.243225

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '00248bed0fb5'
down_revision: Union[str, None] = 'a193e9cfa8c5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('overall_safety_score', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('suitable_diet_types', sa.String(), nullable=True))
    op.add_column('products', sa.Column('allergy_warnings', sa.JSON(), nullable=True))
    op.add_column('products', sa.Column('usage_recommendations', sa.String(), nullable=True))
    op.add_column('products', sa.Column('health_insights', sa.JSON(), nullable=True))
    op.add_column('products', sa.Column('ingredient_interactions', sa.JSON(), nullable=True))
    op.add_column('products', sa.Column('key_takeaway', sa.String(), nullable=True))
    op.add_column('products', sa.Column('ingredients_count', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('user_id', sa.Integer(), nullable=True))
    op.add_column('products', sa.Column('timestamp', sa.DateTime(), nullable=True))
    op.add_column('products', sa.Column('ingredient_ids', sa.JSON(), nullable=True))
    op.drop_column('products', 'brands')
    op.drop_column('products', 'ingredients_text')
    op.drop_column('products', 'nutrient_levels')
    op.drop_column('products', 'nutriments')
    op.drop_column('products', 'nutriscore')
    op.drop_column('products', 'generic_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('products', sa.Column('generic_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('nutriscore', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('nutriments', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('nutrient_levels', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('ingredients_text', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('products', sa.Column('brands', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('products', 'ingredient_ids')
    op.drop_column('products', 'timestamp')
    op.drop_column('products', 'user_id')
    op.drop_column('products', 'ingredients_count')
    op.drop_column('products', 'key_takeaway')
    op.drop_column('products', 'ingredient_interactions')
    op.drop_column('products', 'health_insights')
    op.drop_column('products', 'usage_recommendations')
    op.drop_column('products', 'allergy_warnings')
    op.drop_column('products', 'suitable_diet_types')
    op.drop_column('products', 'overall_safety_score')
    # ### end Alembic commands ###
